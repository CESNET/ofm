/*
 * ver_pcie_tools.jenkins: Jenkins configuration script
 * Copyright (C) 2021 CESNET z. s. p. o.
 * Author(s): Jakub Cabal <cabal@cesnet.cz>
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Clean previous builds
library 'liberouter'
cleanBuilds()

// /////////////////////////////////////////////////////////////////////////////
// BASIC-VERIFICATION
// /////////////////////////////////////////////////////////////////////////////
// Add engines for automatic Jenkins verifications into the following list
// FORMAT:
//  [ 'name',                    'path_to_ver',                                     'script.fdo'   ],
def COMPONENTS_VER = [\
    //['MFB2DMA',                  'comp/pcie/others/mfb2dma/ver',                    'top_level.fdo'],\ 
    ['PTC - Frame Eraser',       'comp/pcie/ptc/comp/frame_eraser_upto96bits/ver',  'top_level.fdo'],\
    ['PTC - Header Data Merge',  'comp/pcie/ptc/comp/hdr_data_merge/ver',           'top_level.fdo'],\
]
// /////////////////////////////////////////////////////////////////////////////

// /////////////////////////////////////////////////////////////////////////////
// MULTI-VERIFICATION
// /////////////////////////////////////////////////////////////////////////////
// Add engines for automatic Jenkins verifications into the following list
// FORMAT :
//  [ 'name'             , 'path_to_ver'                                               , 'fdo_file.fdo'       , 'test_pkg.sv/.vhd'    , 'settings.py'           ]
def COMPONENTS_MULTIVER = [\
    //['PTC'               , 'comp/pcie/ptc/ver'                                         , 'ptc.fdo'            , 'test_pkg.vhd'        , 'ver_settings.py'       ],\
    //['MTC'               , 'comp/pcie/mtc/ver'                                         , 'top_level.fdo'      , 'tbench/test_pkg.sv'  , 'ver_settings.py'       ],\
    ['MTC_UVM'           , 'comp/pcie/mtc/uvm'                                         , 'top_level.fdo'      , 'tbench/tests/pkg.sv' , 'ver_settings.py'       ],\
    ['PTC_UVM'           , 'comp/pcie/ptc/uvm'                                         , 'top_level.fdo'      , 'tbench/tests/pkg.sv' , 'ver_settings.py'       ],\
    ['TX_DMA_CALYPTE'    , 'comp/dma/dma_calypte/comp/tx/uvm'                          , 'top_level.fdo'      , 'tbench/tests/pkg.sv' , 'ver_settings.py'       ],\
    ['RX DMA CALYPTE'    , 'comp/dma/dma_calypte/comp/rx/uvm'                          , 'top_level.fdo'      , 'tbench/tests/pkg.sv' , 'ver_settings.py'       ],\
    ['CQ_AXI2MFB'        , 'comp/pcie/convertors/cq_axi2mfb/uvm'                       , 'top_level.fdo'      , 'tbench/tests/pkg.sv' , 'ver_settings.py'       ],\
    ['CC_MFB2AXI'        , 'comp/pcie/convertors/cc_mfb2axi/uvm'                       , 'top_level.fdo'      , 'tbench/tests/pkg.sv' , 'ver_settings.py'       ],\
    ['MFB2AVST'          , 'comp/pcie/others/mfb2avst/uvm'                             , 'top_level.fdo'      , 'tbench/tests/pkg.sv' , 'ver_settings.py'       ],\
    ['AVST2MFB'          , 'comp/pcie/others/avst2mfb/uvm'                             , 'top_level.fdo'      , 'tbench/tests/pkg.sv' , 'ver_settings.py'       ],\
]
// /////////////////////////////////////////////////////////////////////////////

// Run component verifications using common script
node('preklad') {
    lock(label:"resources-${env.NODE_NAME}", quantity: 1) {
        // fetch sources from GIT
        checkout scm
        def common_run = load "tests/jenkins/common.jenkins"
        common_run.commonPrekladVerRun(COMPONENTS_VER)
        common_run.commonPrekladMultiVerRun(COMPONENTS_MULTIVER)
    }
}
