/*
 * ver_base_tools.jenkins: Jenkins configuration script
 * Copyright (C) 2021 CESNET z. s. p. o.
 * Author(s): Jakub Cabal <cabal@cesnet.cz>
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Clean previous builds
library 'liberouter'
cleanBuilds()

// /////////////////////////////////////////////////////////////////////////////
// BASIC-VERIFICATION
// /////////////////////////////////////////////////////////////////////////////
// Add engines for automatic Jenkins verifications into the following list
// FORMAT:
//  [ 'name',               'path_to_ver',                          'script.fdo'   ],
def COMPONENTS_VER = [\
    ['MEM2NFIFO',           'comp/base/buffers/top/ver/mem2nfifo',  'top_level.fdo'],\
    ['NFIFO2FIFO',          'comp/base/buffers/top/ver/nfifo2fifo', 'top_level.fdo'],\
    ['NFIFO',               'comp/base/buffers/top/ver/nfifo',      'top_level.fdo'],\
    ['NFIFO2MEM',           'comp/base/buffers/top/ver/nfifo2mem',  'top_level.fdo'],\
    ['MFIFO2MEM',           'comp/base/buffers/top/ver/mfifo2mem',  'top_level.fdo'],\
    ['FIFO2NFIFO',          'comp/base/buffers/top/ver/fifo2nfifo', 'top_level.fdo'],\
    ['CNT_MULTI_MEMX',      'comp/base/logic/cnt_multi_memx/ver',   'top_level.fdo'],\
    ['ASFIFOX',             'comp/base/fifo/asfifox/ver',           'top_level.fdo'],\
    ['ASFIFOX UVM',         'comp/base/fifo/asfifox/uvm',           'top_level.fdo'],\
    ['ASYNC_BUS_HANDSHAKE', 'comp/base/async/bus_handshake/ver',    'top_level.fdo'],\
]
// /////////////////////////////////////////////////////////////////////////////

// /////////////////////////////////////////////////////////////////////////////
// MULTI-VERIFICATION
// /////////////////////////////////////////////////////////////////////////////
// Add engines for automatic Jenkins verifications into the following list
// FORMAT:
//  [ 'name'             , 'path_to_ver'                             , 'fdo_file.fdo'       , 'test_pkg.sv/.vhd'   , 'settings.py'           ]
def COMPONENTS_MULTIVER = [\
    ['TRANS_SORTER'      , 'comp/base/misc/trans_sorter/ver'         , 'top_level.fdo'      , 'tbench/test_pkg.sv' , 'ver_settings.py'       ],\
    ['CROSSBARX'         , 'comp/base/misc/crossbarx/ver'            , 'top_level.fdo'      , 'test_pkg.vhd'       , 'ver_settings.py'       ],\
    ['PACKET_PLANNER'    , 'comp/base/misc/packet_planner/ver'       , 'top_level.fdo'      , 'tbench/test_pkg.sv' , 'ver_settings.py'       ],\
    ['FIFOX'             , 'comp/base/fifo/fifox/uvm'                , 'top_level.fdo'      , 'tbench/tests/pkg.sv', 'ver_settings.py'       ],\
    ['FIFOX_MULTI'       , 'comp/base/fifo/fifox_multi/uvm'          , 'top_level.fdo'      , 'tbench/tests/pkg.sv', 'ver_settings.py'       ],\
    ['N_LOOP_OP'         , 'comp/base/logic/n_loop_op/sim'           , 'n_loop_op.fdo'      , 'testbench.vhd'      , 'ver_settings.py'       ],\
    ['N_LOOP_OP_PRO'     , 'comp/base/logic/n_loop_op_pro/sim'       , 'n_loop_op_pro.fdo'  , 'testbench.vhd'      , 'ver_settings.py'       ],\
    ['DSP_CNT_INTEL'     , 'comp/base/dsp/dsp_counter_intel/sim'     , 'sim.fdo'            , 'testbench.vhd'      , 'ver_settings.py'       ],\
    ['DSP_CNT'           , 'comp/base/dsp/dsp_counter/sim'           , 'sim.fdo'            , 'testbench.vhd'      , 'ver_settings.py'       ],\
    ['DSP_CMP_INTEL'     , 'comp/base/dsp/dsp_comparator_intel/sim'  , 'sim.fdo'            , 'testbench.vhd'      , 'ver_settings.py'       ],\
    ['DSP_CMP'           , 'comp/base/dsp/dsp_comparator/sim'        , 'sim.fdo'            , 'testbench.vhd'      , 'ver_settings.py'       ],\
    ['TCAM2'             , 'comp/base/mem/tcam2/ver'                 , 'top_level.fdo'      , 'tbench/test_pkg.sv' , 'ver_settings.py'       ],\
]
// /////////////////////////////////////////////////////////////////////////////

// Run component verifications using common script
node('preklad') {
    lock(label:"resources-${env.NODE_NAME}", quantity: 1) {
        // fetch sources from GIT
        checkout scm
        def common_run = load "tests/jenkins/common.jenkins"
        common_run.commonPrekladVerRun(COMPONENTS_VER)
        common_run.commonPrekladMultiVerRun(COMPONENTS_MULTIVER)
    }
}
